<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.hello.dao.mapper.HelloCommentConfigMapper">
  <resultMap id="BaseResultMap" type="com.hust.hello.common.model.entity.HelloCommentConfig">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="comment_id" jdbcType="VARCHAR" property="commentId" />
    <result column="post_id" jdbcType="VARCHAR" property="postId" />
    <result column="object_id" jdbcType="VARCHAR" property="objectId" />
    <result column="creator_id" jdbcType="VARCHAR" property="creatorId" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_status" jdbcType="INTEGER" property="commentStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_edit_time" jdbcType="TIMESTAMP" property="lastEditTime" />
    <result column="like_sum" jdbcType="INTEGER" property="likeSum" />
    <result column="dislike_sum" jdbcType="INTEGER" property="dislikeSum" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, comment_id, post_id, object_id, creator_id, comment_content, comment_status, 
    create_time, last_edit_time, like_sum, dislike_sum, version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hello_comment_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from hello_comment_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hust.hello.common.model.entity.HelloCommentConfig" useGeneratedKeys="true">
    insert into hello_comment_config (comment_id, post_id, object_id, 
      creator_id, comment_content, comment_status, 
      create_time, last_edit_time, like_sum, 
      dislike_sum, version)
    values (#{commentId,jdbcType=VARCHAR}, #{postId,jdbcType=VARCHAR}, #{objectId,jdbcType=VARCHAR}, 
      #{creatorId,jdbcType=VARCHAR}, #{commentContent,jdbcType=VARCHAR}, #{commentStatus,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastEditTime,jdbcType=TIMESTAMP}, #{likeSum,jdbcType=INTEGER}, 
      #{dislikeSum,jdbcType=INTEGER}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hust.hello.common.model.entity.HelloCommentConfig" useGeneratedKeys="true">
    insert into hello_comment_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="objectId != null">
        object_id,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentStatus != null">
        comment_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastEditTime != null">
        last_edit_time,
      </if>
      <if test="likeSum != null">
        like_sum,
      </if>
      <if test="dislikeSum != null">
        dislike_sum,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=VARCHAR},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null">
        #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentStatus != null">
        #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastEditTime != null">
        #{lastEditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeSum != null">
        #{likeSum,jdbcType=INTEGER},
      </if>
      <if test="dislikeSum != null">
        #{dislikeSum,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.hello.common.model.entity.HelloCommentConfig">
    update hello_comment_config
    <set>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=VARCHAR},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null">
        object_id = #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentStatus != null">
        comment_status = #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastEditTime != null">
        last_edit_time = #{lastEditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likeSum != null">
        like_sum = #{likeSum,jdbcType=INTEGER},
      </if>
      <if test="dislikeSum != null">
        dislike_sum = #{dislikeSum,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.hello.common.model.entity.HelloCommentConfig">
    update hello_comment_config
    set comment_id = #{commentId,jdbcType=VARCHAR},
      post_id = #{postId,jdbcType=VARCHAR},
      object_id = #{objectId,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_status = #{commentStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_edit_time = #{lastEditTime,jdbcType=TIMESTAMP},
      like_sum = #{likeSum,jdbcType=INTEGER},
      dislike_sum = #{dislikeSum,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="deleteWithVersionByPrimaryKey" parameterType="map">
    delete from hello_comment_config
    where version = #{version,jdbcType=INTEGER}
      and id = #{key,jdbcType=BIGINT}
  </delete>
  <update id="updateWithVersionByPrimaryKey" parameterType="map">
    update hello_comment_config
    set version = version + 1,
    comment_id = #{record.commentId,jdbcType=VARCHAR}, 
    post_id = #{record.postId,jdbcType=VARCHAR}, 
    object_id = #{record.objectId,jdbcType=VARCHAR}, 
    creator_id = #{record.creatorId,jdbcType=VARCHAR}, 
    comment_content = #{record.commentContent,jdbcType=VARCHAR}, 
    comment_status = #{record.commentStatus,jdbcType=INTEGER}, 
    create_time = #{record.createTime,jdbcType=TIMESTAMP}, 
    last_edit_time = #{record.lastEditTime,jdbcType=TIMESTAMP}, 
    like_sum = #{record.likeSum,jdbcType=INTEGER}, 
    dislike_sum = #{record.dislikeSum,jdbcType=INTEGER}
    where version = #{version,jdbcType=INTEGER}
      and id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateWithVersionByPrimaryKeySelective" parameterType="map">
    update hello_comment_config
    <set>
      <trim suffixOverrides=",">
        version = version + 1,
        <if test="record.commentId != null">
          comment_id = #{record.commentId,jdbcType=VARCHAR},
        </if>
        <if test="record.postId != null">
          post_id = #{record.postId,jdbcType=VARCHAR},
        </if>
        <if test="record.objectId != null">
          object_id = #{record.objectId,jdbcType=VARCHAR},
        </if>
        <if test="record.creatorId != null">
          creator_id = #{record.creatorId,jdbcType=VARCHAR},
        </if>
        <if test="record.commentContent != null">
          comment_content = #{record.commentContent,jdbcType=VARCHAR},
        </if>
        <if test="record.commentStatus != null">
          comment_status = #{record.commentStatus,jdbcType=INTEGER},
        </if>
        <if test="record.createTime != null">
          create_time = #{record.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.lastEditTime != null">
          last_edit_time = #{record.lastEditTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.likeSum != null">
          like_sum = #{record.likeSum,jdbcType=INTEGER},
        </if>
        <if test="record.dislikeSum != null">
          dislike_sum = #{record.dislikeSum,jdbcType=INTEGER},
        </if>
      </trim>
    </set>
    where version = #{version,jdbcType=INTEGER}
      and id = #{record.id,jdbcType=BIGINT}
  </update>
</mapper>