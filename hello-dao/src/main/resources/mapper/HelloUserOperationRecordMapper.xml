<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.hello.dao.mapper.HelloUserOperationRecordMapper">
  <resultMap id="BaseResultMap" type="com.hust.hello.common.model.entity.HelloUserOperationRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="record_id" jdbcType="VARCHAR" property="recordId" />
    <result column="operator_id" jdbcType="VARCHAR" property="operatorId" />
    <result column="object_id" jdbcType="VARCHAR" property="objectId" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="operation_type" jdbcType="INTEGER" property="operationType" />
    <result column="is_cancel" jdbcType="INTEGER" property="isCancel" />
    <result column="cancel_time" jdbcType="TIMESTAMP" property="cancelTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, record_id, operator_id, object_id, operate_time, operation_type, is_cancel, cancel_time, 
    remark, version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hello_user_operation_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from hello_user_operation_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hust.hello.common.model.entity.HelloUserOperationRecord" useGeneratedKeys="true">
    insert into hello_user_operation_record (record_id, operator_id, object_id, 
      operate_time, operation_type, is_cancel, 
      cancel_time, remark, version
      )
    values (#{recordId,jdbcType=VARCHAR}, #{operatorId,jdbcType=VARCHAR}, #{objectId,jdbcType=VARCHAR}, 
      #{operateTime,jdbcType=TIMESTAMP}, #{operationType,jdbcType=INTEGER}, #{isCancel,jdbcType=INTEGER}, 
      #{cancelTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hust.hello.common.model.entity.HelloUserOperationRecord" useGeneratedKeys="true">
    insert into hello_user_operation_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        record_id,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="objectId != null">
        object_id,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="operationType != null">
        operation_type,
      </if>
      <if test="isCancel != null">
        is_cancel,
      </if>
      <if test="cancelTime != null">
        cancel_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null">
        #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationType != null">
        #{operationType,jdbcType=INTEGER},
      </if>
      <if test="isCancel != null">
        #{isCancel,jdbcType=INTEGER},
      </if>
      <if test="cancelTime != null">
        #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust.hello.common.model.entity.HelloUserOperationRecord">
    update hello_user_operation_record
    <set>
      <if test="recordId != null">
        record_id = #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null">
        object_id = #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationType != null">
        operation_type = #{operationType,jdbcType=INTEGER},
      </if>
      <if test="isCancel != null">
        is_cancel = #{isCancel,jdbcType=INTEGER},
      </if>
      <if test="cancelTime != null">
        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust.hello.common.model.entity.HelloUserOperationRecord">
    update hello_user_operation_record
    set record_id = #{recordId,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      object_id = #{objectId,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operation_type = #{operationType,jdbcType=INTEGER},
      is_cancel = #{isCancel,jdbcType=INTEGER},
      cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="deleteWithVersionByPrimaryKey" parameterType="map">
    delete from hello_user_operation_record
    where version = #{version,jdbcType=INTEGER}
      and id = #{key,jdbcType=BIGINT}
  </delete>
  <update id="updateWithVersionByPrimaryKey" parameterType="map">
    update hello_user_operation_record
    set version = version + 1,
    record_id = #{record.recordId,jdbcType=VARCHAR}, 
    operator_id = #{record.operatorId,jdbcType=VARCHAR}, 
    object_id = #{record.objectId,jdbcType=VARCHAR}, 
    operate_time = #{record.operateTime,jdbcType=TIMESTAMP}, 
    operation_type = #{record.operationType,jdbcType=INTEGER}, 
    is_cancel = #{record.isCancel,jdbcType=INTEGER}, 
    cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP}, 
    remark = #{record.remark,jdbcType=VARCHAR}
    where version = #{version,jdbcType=INTEGER}
      and id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateWithVersionByPrimaryKeySelective" parameterType="map">
    update hello_user_operation_record
    <set>
      <trim suffixOverrides=",">
        version = version + 1,
        <if test="record.recordId != null">
          record_id = #{record.recordId,jdbcType=VARCHAR},
        </if>
        <if test="record.operatorId != null">
          operator_id = #{record.operatorId,jdbcType=VARCHAR},
        </if>
        <if test="record.objectId != null">
          object_id = #{record.objectId,jdbcType=VARCHAR},
        </if>
        <if test="record.operateTime != null">
          operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.operationType != null">
          operation_type = #{record.operationType,jdbcType=INTEGER},
        </if>
        <if test="record.isCancel != null">
          is_cancel = #{record.isCancel,jdbcType=INTEGER},
        </if>
        <if test="record.cancelTime != null">
          cancel_time = #{record.cancelTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.remark != null">
          remark = #{record.remark,jdbcType=VARCHAR},
        </if>
      </trim>
    </set>
    where version = #{version,jdbcType=INTEGER}
      and id = #{record.id,jdbcType=BIGINT}
  </update>
</mapper>